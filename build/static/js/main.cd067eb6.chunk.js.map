{"version":3,"sources":["App.js","index.js"],"names":["App","useState","modelName","setModelName","modelCost","setModelCost","carsList","setCarsList","useEffect","axios","get","then","resp","console","log","data","catch","err","className","Typography","style","fontSize","backgroundColor","Grid","container","justify","spacing","height","marginTop","item","xs","TextField","label","required","variant","placeholder","value","onChange","e","target","type","Button","onClick","post","model","cost","_id","name","alert","Card","paddingLeft","paddingRight","marginLeft","width","overflowY","overflowX","length","Table","TableHead","TableCell","map","car","TableRow","padding","margin","id","newCost","prompt","Number","put","handleUpdate","color","delete","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd067eb6.chunk.js","sourcesContent":["import {Button, Card, Grid, Paper, Table, TableCell, TableHead, TableRow, TextField, Typography} from \"@material-ui/core\"\nimport { useEffect, useState } from \"react\";\nimport './App.css';\nimport axios from 'axios'\nfunction App() {\n  const [modelName,setModelName]=useState('')\n  const [modelCost,setModelCost]=useState(\"\")\n  const [carsList,setCarsList]=useState([])\n\n  useEffect(()=>{\naxios.get(\"https://rams-cardata.herokuapp.com/read\").then(resp=>{console.log(resp.data)\n  setCarsList(resp.data)}).catch((err)=>{\n    console.log(err)\n  })\n\n  },[])\n\n  ////////////UPDATE HANDLER\n  const handleUpdate=(id)=>{\n    const newCost=prompt(\"Enter the new cost:\")\n    //alert(newCost.match('/^[0-9]+$/'))\n        if(newCost!=null&&newCost!=''&&Number(newCost)!==0){\n      \n      axios.put(\"https://rams-cardata.herokuapp.com/update\",{id:id,cost:newCost}).then(()=>{\n      alert(\"Cost updated...\")\n      setCarsList(carsList.map(car=>{\n        if(car._id==id){\n          return {...car,cost:Number(newCost)}\n        }\n        return car\n      }))\n    })\n    }\n    \n  }\n  //////////////DELETE HANDLER\n  const handleDelete=(id)=>{\n    console.log(id)\n    \n       axios.delete(`https://rams-cardata.herokuapp.com/delete/${id}`).then(()=>{\n        alert(\"Deleted.\")\n        setCarsList(carsList.filter(car=>{\n          return car._id!==id\n        }))\n      }\n      ).catch(err=>{\n        console.log(\"Error occured while deleting \"+err)\n      })\n    }\n   \n  ///////////////////////SUBMIT HANDLER\n  const handleSubmit=()=>{\n    console.log(modelName,\" \",modelCost)\n      axios.post(\"https://rams-cardata.herokuapp.com/insert\",{model:modelName,cost:modelCost}).then((resp)=>{\n        console.log(resp.data)\n        setCarsList([...carsList,{_id:resp.data._id,name:modelName,cost:modelCost}])\n        alert('Car added. Thank you.')\n        setModelCost('')\n        setModelName('')\n      }).catch((err)=>{alert('Not added. '+err)})\n}\n//////////////////////////////////////////RETURN\n  return (\n    <div className=\"App\">\n      <Typography style={{fontSize:\"50px\",backgroundColor:\"pink\"}}>Car cost index - de Ram's</Typography>\n      {/* <Paper style={{height:'200px',margin:\"5%\"}}> */}\n        <Grid container justify=\"center\" spacing=\"1\" style={{height:'200px',marginTop:\"2%\"}} >\n          <Grid item xs=\"12\">\n            <Typography>Enter the Car details:</Typography>\n          </Grid>\n          <Grid item xs=\"12\" >\n            {/* <Typography>Model Name:</Typography> */}\n            <TextField label=\"Model Name\" required variant='outlined' placeholder=\"Enter car model\" value={modelName} onChange={(e)=>{setModelName(e.target.value)}}/>\n          </Grid>\n          <Grid item xs=\"12\" >\n            {/* <Typography>Model Cost:</Typography> */}\n          <TextField required label=\"Model Cost\" type=\"number\" variant='outlined' placeholder=\"Enter car cost\" value={modelCost} onChange={(e)=>{setModelCost(e.target.value)}} />\n          </Grid>\n          <Grid item xs=\"12\" >\n            <Button variant='outlined' onClick={handleSubmit}>Add</Button>\n          \n          </Grid>\n          \n        </Grid>\n        <hr></hr>\n        <Typography style={{marginTop:'2%'}}>List of owned cars with prices..</Typography>\n      <Card style={{paddingLeft:'5%',paddingRight:'5%',marginLeft:'25%',width:'50%',height:'300px',overflowY:'auto',overflowX:'auto'}}>\n      {carsList.length!==0?<><Table >\n  <TableHead >\n    <TableCell><u><b>Car Model Name</b></u></TableCell>\n    <TableCell><u><b>Cost(in Rupees)</b></u></TableCell>\n    \n    </TableHead>\n  {carsList.map(car=>{return(\n    <TableRow>\n    <TableCell>{car.name}</TableCell>\n    <TableCell>{(car.cost)/100000}{' Lakhs'}</TableCell>\n    <TableCell><Button style={{padding:\"0px\",margin:\"0px\",backgroundColor:\"yellow\"}} onClick={()=>{handleUpdate(car._id)}}>Update</Button></TableCell>\n    <TableCell><Button style={{padding:\"0px\",margin:\"0px\",backgroundColor:\"#E74C3C \",color:'white'}} onClick={()=>{handleDelete(car._id)}}>Delete</Button></TableCell>\n    \n      </TableRow>\n  )})}\n  \n  \n </Table></>:'' }</Card>\n{/* <div>{carsList.map(car=><h2>{car.name}</h2>)}</div> */}\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App/>,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}